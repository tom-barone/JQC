name: "Test"

on:
  workflow_call:
    inputs: {}
    secrets:
      RAILS_MASTER_KEY:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
    services:
      postgres:
        image: postgres:17.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: |
          # Install the PostgreSQL apt repository so we can get psql 17
          sudo apt install --no-install-recommends -y curl ca-certificates
          sudo install -d /usr/share/postgresql-common/pgdg
          sudo curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc
          . /etc/os-release
          sudo sh -c "echo 'deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $VERSION_CODENAME-pgdg main' > /etc/apt/sources.list.d/pgdg.list"
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential \
            git \
            libpq-dev \
            pkg-config \
            google-chrome-stable \
            postgresql-client-17

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup the just task runner
        uses: extractions/setup-just@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          cache: "npm"

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          psql --version
          just install
          just test

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

      - name: "Save test and code coverage results"
        uses: "actions/upload-artifact@v4"
        with:
          name: "test-reports"
          path: "ci"
